<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cheer.mini.ums.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.cheer.mini.ums.model.User" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="account_type_fk" property="accountTypeFk" jdbcType="INTEGER" />
    <result column="date_create" property="dateCreate" jdbcType="TIMESTAMP" />
    <result column="date_update" property="dateUpdate" jdbcType="TIMESTAMP" />
    <result column="creator_fk" property="creatorFk" jdbcType="VARCHAR" />
    <result column="updater_fk" property="updaterFk" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, nickname, account, password, salt, gender, account_type_fk, date_create, 
    date_update, creator_fk, updater_fk, is_valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cheer.mini.ums.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
     <if test="page != null" >
     limit ${(page.pageNo-1)*page.pageSize},${page.pageSize}
    </if>
  </select>
  
   <select id="selectCountByExample" resultType="java.lang.Integer" parameterType="com.cheer.mini.ums.model.OrderExample" >
    select count(1) from(select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    )CNT
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ums_user
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ums_user
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.cheer.mini.ums.model.User" >
    insert into ums_user (id, name, nickname, 
      account, password, salt, 
      gender, account_type_fk, date_create, 
      date_update, creator_fk, updater_fk, 
      is_valid)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{accountTypeFk,jdbcType=INTEGER}, #{dateCreate,jdbcType=TIMESTAMP}, 
      #{dateUpdate,jdbcType=TIMESTAMP}, #{creatorFk,jdbcType=VARCHAR}, #{updaterFk,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=TINYINT})
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.cheer.mini.ums.model.User" >
    insert into ums_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="accountTypeFk != null" >
        account_type_fk,
      </if>
      <if test="dateCreate != null" >
        date_create,
      </if>
      <if test="dateUpdate != null" >
        date_update,
      </if>
      <if test="creatorFk != null" >
        creator_fk,
      </if>
      <if test="updaterFk != null" >
        updater_fk,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="accountTypeFk != null" >
        #{accountTypeFk,jdbcType=INTEGER},
      </if>
      <if test="dateCreate != null" >
        #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdate != null" >
        #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorFk != null" >
        #{creatorFk,jdbcType=VARCHAR},
      </if>
      <if test="updaterFk != null" >
        #{updaterFk,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cheer.mini.ums.model.User" >
    update ums_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="accountTypeFk != null" >
        account_type_fk = #{accountTypeFk,jdbcType=INTEGER},
      </if>
      <if test="dateCreate != null" >
        date_create = #{dateCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdate != null" >
        date_update = #{dateUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorFk != null" >
        creator_fk = #{creatorFk,jdbcType=VARCHAR},
      </if>
      <if test="updaterFk != null" >
        updater_fk = #{updaterFk,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cheer.mini.ums.model.User" >
    update ums_user
    set name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      account_type_fk = #{accountTypeFk,jdbcType=INTEGER},
      date_create = #{dateCreate,jdbcType=TIMESTAMP},
      date_update = #{dateUpdate,jdbcType=TIMESTAMP},
      creator_fk = #{creatorFk,jdbcType=VARCHAR},
      updater_fk = #{updaterFk,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=TINYINT}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>